name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install just
        run: |
          if ! command -v just &> /dev/null; then
            curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | sudo bash -s -- --to /usr/local/bin
          else
            echo "just is already installed: $(just --version)"
          fi
      
      - name: Install dependencies  
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-shape0-dev libxcb-xfixes0-dev libxcb1-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev python3-dev libx11-xcb-dev

      - name: Setup Rust toolchain (GitHub)
        if: ${{ !env.ACT }}
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy

      - name: Setup Rust toolchain (act)
        if: ${{ env.ACT }}
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          source $HOME/.cargo/env
          rustup component add rustfmt clippy

      - name: Cache cargo registry
        if: ${{ !env.ACT }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting with rustfmt
        run: just fmt-check

      - name: Run clippy
        run: just clippy

      - name: Install protoc and nostr-rs-relay
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          cargo install nostr-rs-relay

      - name: Run tests
        run: just test

      - name: Auto-merge PR
        if: |
          success() && 
          github.event_name == 'pull_request' && 
          github.event.pull_request.user.login == github.repository_owner &&
          github.event.pull_request.draft == false &&
          !env.ACT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "All tests passed! Merging PR #${{ github.event.pull_request.number }}"
          gh pr merge ${{ github.event.pull_request.number }} \
            --repo ${{ github.repository }} \
            --squash \
            --delete-branch